{% comment %}
  Product Bundler Snippet
  Snippet do wywołania przez Custom Liquid w sekcji main-product
{% endcomment %}

{% assign bundle_collection = collections['smells-like'] %}
{% unless bundle_collection %}
  {% assign bundle_collection = collections.first %}
{% endunless %}



<div class="product-bundler" data-bundler>
  <div class="bundler-container">
      <!-- Header -->
      <div class="bundler-header">
        <div class="bundler-title">
          <h1>Create Your Bundle!</h1>
          <p class="bundler-subtitle">Best scents you've ever smelled or your money back.</p>
          <div class="bundler-reviews">
            <div class="stars">★★★★★</div>
            <span class="review-count">{{ shop.metafields.judgeme.all_reviews_count | default: '150,983' }} Reviews</span>
      </div>

        </div>
          </div>

      <!-- Variant Selection -->
      <div class="variant-selection">
        <h3 class="variant-title">Select Size!</h3>
        <p class="variant-subtitle">80% of customers buy 100ML</p>
        <div class="variant-buttons">
          <button class="variant-btn" data-variant="30ML" onclick="selectVariant('30ML')">
            <div class="variant-image">
              <img src="https://tryscent.co/cdn/shop/files/Pineapple_Smoke_Vanilla_-_30ml.png?crop=center&height=100&v=1754413628&width=100" alt="30ML">
          </div>
            <span class="variant-size">30ML</span>
          </button>
          <button class="variant-btn" data-variant="50ML" onclick="selectVariant('50ML')">
            <div class="variant-badge popular">Popular</div>
            <div class="variant-image">
              <img src="https://tryscent.co/cdn/shop/files/Pineapple_Smoke_Vanilla_-_30ml.png?crop=center&height=100&v=1754413628&width=100" alt="50ML">
          </div>
            <span class="variant-size">50ML</span>
          </button>
          <button class="variant-btn active" data-variant="100ML" onclick="selectVariant('100ML')">
            <div class="variant-badge bestseller">Bestseller</div>
            <div class="variant-image">
              <img src="https://tryscent.co/cdn/shop/files/Pineapple_Smoke_Vanilla_-_30ml.png?crop=center&height=100&v=1754413628&width=100" alt="100ML">
            </div>
            <span class="variant-size">100ML</span>
          </button>
        </div>
      </div>

      <!-- Bundle Type Selection -->
      <div class="bundle-type-selection" id="bundleSelection">
        {% assign first_product = bundle_collection.products.first %}
        {% assign first_variant_100ml = first_product.variants | where: 'title', '100ML' | first %}
        {% assign base_price = first_variant_100ml.price | default: 2699 %}
        <div class="bundle-type-buttons">
          <button class="bundle-type-btn active" data-bundle-type="2+1" onclick="selectBundleType('2+1')">
            <span class="bundle-type-desc">Buy 2, Get 1 Free</span>
            <span class="bundle-total-price">{{ base_price | times: 2 | money }}</span>
            <span class="bundle-price" id="price-2+1">{{ base_price | times: 2 | divided_by: 3 | money }} per bottle</span>
            <div class="bundle-savings" id="savings-2+1">SAVE {{ base_price | money }}</div>
          </button>
          <button class="bundle-type-btn" data-bundle-type="3+2" onclick="selectBundleType('3+2')">
            <span class="bundle-type-desc">Buy 3, Get 2 Free</span>
            <span class="bundle-total-price">{{ base_price | times: 3 | money }}</span>
            <span class="bundle-price" id="price-3+2">{{ base_price | times: 3 | divided_by: 5 | money }} per bottle</span>
            <div class="bundle-savings" id="savings-3+2">SAVE {{ base_price | times: 2 | money }}</div>
          </button>
          <button class="bundle-type-btn" data-bundle-type="4+3" onclick="selectBundleType('4+3')">
                              <div class="bundle-badge bestseller">FREE SHIPPING</div>
            <span class="bundle-type-desc">Buy 4, Get 3 Free</span>
            <span class="bundle-total-price">{{ base_price | times: 4 | money }}</span>
            <span class="bundle-price" id="price-4+3">{{ base_price | times: 4 | divided_by: 7 | money }} per bottle</span>
            <div class="bundle-savings" id="savings-4+3">SAVE {{ base_price | times: 3 | money }}</div>
          </button>
          <button class="bundle-type-btn" data-bundle-type="5+4" onclick="selectBundleType('5+4')">
            <div class="bundle-badge best-value">Best Value</div>
            <span class="bundle-type-desc">Buy 5, Get 4 Free</span>
            <span class="bundle-total-price">{{ base_price | times: 5 | money }}</span>
            <span class="bundle-price" id="price-5+4">{{ base_price | times: 5 | divided_by: 9 | money }} per bottle</span>
            <div class="bundle-savings" id="savings-5+4">SAVE {{ base_price | times: 4 | money }}</div>
          </button>
        </div>
      </div>



      <!-- Search and Filter Section -->
      <div class="bundler-search-filter">
        <div class="search-container">
          <input type="text" id="searchInput" placeholder="Search for scents..." onkeyup="filterProducts()">
        </div>
        <div class="filter-container">
        <button class="filter-btn active" data-filter="all" onclick="filterByCategory('all')">All</button>
        <button class="filter-btn" data-filter="man" onclick="filterByCategory('man')">Man</button>
        <button class="filter-btn" data-filter="woman" onclick="filterByCategory('woman')">Woman</button>
        </div>
      </div>

      <!-- Main Content with Sidebar -->
      <div class="bundler-main-content">
        <!-- Products Grid -->
        <div class="bundler-products" id="productsGrid">
          {% for product in bundle_collection.products %}
            {% assign default_variant = product.variants | where: "title", "100ML" | first %}
            {% unless default_variant %}
              {% assign default_variant = product.variants.first %}
            {% endunless %}
            
              <div class="product-card bundler-product" data-product-id="{{ product.id }}" data-variant-id="{{ default_variant.id }}" data-category="{{ product.tags | join: ' ' | downcase }}" data-current-variant="{{ currentVariant }}">
                <!-- Product Badge -->
                {% if product.tags contains 'new' %}
                  <div class="product-badge new">New</div>
                {% elsif product.tags contains 'popular' %}
                  <div class="product-badge popular">Most Popular</div>
                {% endif %}
                
                <!-- Product Image -->
              <div class="product-image">
                  <img src="{{ product.featured_image | image_url: width: 200 }}" alt="{{ product.title }}" loading="lazy">
              </div>
                
                <!-- Product Info -->
              <div class="product-info">
                <h3 class="product-title">{{ product.title }}</h3>
                  
                  <!-- Reviews -->
                  <div class="product-reviews">
                    <div class="stars">★★★★★</div>
                    <span class="review-count">5 ({{ product.metafields.judgeme.reviews_count | default: '150' }})</span>
                </div>
                  
                  <!-- Price Display -->
                  <div class="product-price-display">
                    {% assign variant_30ml = product.variants | where: 'title', '30ML' | first %}
                    {% assign variant_50ml = product.variants | where: 'title', '50ML' | first %}
                    {% assign variant_100ml = product.variants | where: 'title', '100ML' | first %}
                    {% if default_variant.compare_at_price > default_variant.price %}
                      <span class="product-compare-price">{{ default_variant.compare_at_price | money }}</span>
                    {% endif %}
                    <span class="product-price" id="price-{{ product.id }}" data-30ml="{% if variant_30ml %}{{ variant_30ml.price | money }}{% else %}{{ default_variant.price | money }}{% endif %}" data-50ml="{% if variant_50ml %}{{ variant_50ml.price | money }}{% else %}{{ default_variant.price | money }}{% endif %}" data-100ml="{% if variant_100ml %}{{ variant_100ml.price | money }}{% else %}{{ default_variant.price | money }}{% endif %}">{{ default_variant.price | money }}</span>
                </div>
                  
                  <!-- Add to Bundle Button -->
                  <button class="add-to-bundle-btn" onclick="selectProduct({{ product.id }}, {{ default_variant.id }});">
                    ADD TO BUNDLE
                  </button>
                </div>
                
                <!-- Selection Indicator -->
                <div class="selection-indicator" style="display: none;">
                  <div class="check-icon">✓</div>
                </div>
              </div>
                    {% endfor %}
                </div>

          <!-- Shopping Cart Sidebar -->
          <div class="bundler-sidebar">
            <div class="sidebar-content">
              <h3 class="sidebar-title" id="sidebarTitle">Shopping Cart</h3>
              
              <!-- Progress Section -->
              <div class="cart-progress">
                <div class="progress-text" id="cartProgressText">Please select at least 2 scents</div>
                <div class="bundler-progress-container">
                  <div class="bundler-progress-bar">
                    <div class="bundler-progress-fill" id="cartProgressFill"></div>
                    <div class="progress-markers" id="progressMarkers">
                      <!-- Markers will be generated dynamically -->
                </div>
              </div>
              </div>
            </div>

              <!-- Selected Items -->
              <div class="selected-items" id="selectedItems">
                <div class="empty-cart">
                  <p>Your cart is empty.</p>
                </div>
        </div>

              <!-- Add Bundle Button -->
              <div class="sidebar-footer">
          <button id="addBundleBtn" class="add-bundle-btn" onclick="addBundleToCart()" disabled>
                  <span class="btn-text" id="btnText">Please Select 3 More Scents</span>
                  <span class="btn-status" id="btnStatus">0/3</span>
          </button>
        </div>
      </div>
    </div>
      </div>
</div>

    </div>
  </div>
</div>

<style>
/* Bundler Styles - bez modala */
.product-bundler {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

.bundler-container {
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  border-radius: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  padding: 20px;
  display: flex;
  flex-direction: column;
  gap: 0;
}

/* Header */
.bundler-header {
  text-align: center;
  padding: 40px 32px 32px 32px;
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  border-bottom: 1px solid #eee;
}

.bundler-title h1 {
  margin: 0 0 8px 0;
  font-size: 7.5rem;
  font-weight: 800;
  color: #222;
  letter-spacing: -0.5px;
}

.bundler-subtitle {
  margin: 0 0 16px 0;
  font-size: 3.3rem;
  color: #666;
  font-weight: 500;
}

.bundler-reviews {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 24px;
  margin-bottom: 72px;
  font-size: 2.7rem;
  color: #666;
}

.stars {
  color: #ffd700;
  font-size: 3.3rem;
  letter-spacing: 6px;
}

.review-count {
  font-size: 2.7rem;
  color: #666;
  font-weight: 500;
}

.bundler-savings-info {
  margin-top: 12px;
}

.savings-badge {
  background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
  color: white;
  font-size: 1rem;
  font-weight: 600;
  padding: 8px 16px;
  border-radius: 20px;
  display: inline-block;
}

/* Variant Selection */
.variant-selection {
  padding: 32px;
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  border-bottom: 1px solid #eee;
  text-align: center;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.variant-title {
  font-size: 3rem;
  font-weight: 700;
  color: #222;
  margin: 0 0 16px 0;
}

.variant-subtitle {
  font-size: 2rem;
  color: #666;
  margin: 0 0 48px 0;
}

.variant-buttons {
  display: flex;
  justify-content: center;
  gap: 40px;
  max-width: 1200px;
  margin: 0 auto;
}

.variant-btn {
  background: white;
  border: 4px solid #e0e0e0;
  border-radius: 32px;
  padding: 40px;
  cursor: pointer;
  transition: all 0.3s ease;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 24px;
  min-width: 240px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
  position: relative;
}

.variant-btn:hover {
  border-color: #28a745;
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(40, 167, 69, 0.15);
}

.variant-btn.active {
  border-color: #28a745;
  background: linear-gradient(135deg, #f8fff9 0%, #ffffff 100%);
  box-shadow: 0 4px 16px rgba(40, 167, 69, 0.2);
}

.variant-image {
  width: 160px;
  height: 160px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.variant-image img {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

.variant-size {
  font-size: 2.4rem;
  font-weight: 700;
  color: #222;
}

.variant-badge {
  position: absolute;
  top: -16px;
  left: 50%;
  transform: translateX(-50%);
  padding: 8px 16px;
  border-radius: 24px;
  font-size: 1.4rem;
  font-weight: 700;
  text-transform: uppercase;
  color: white;
}

.variant-badge.popular {
  background: #ff6b6b;
}

.variant-badge.bestseller {
  background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
}

/* Bundle Type Selection */
.bundle-type-selection {
  padding: 32px;
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  border-bottom: 1px solid #eee;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.bundle-type-buttons {
  display: flex;
  justify-content: space-between;
  gap: 16px;
  width: 100%;
  margin: 0 auto;
  flex-wrap: nowrap;
  overflow: visible;
}

.bundle-type-btn {
  background: white;
  border: 4px solid #e0e0e0;
  border-radius: 32px;
  padding: 24px 12px;
  cursor: pointer;
  transition: all 0.3s ease;
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
  min-width: 150px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
  position: relative;
  overflow: visible;
  flex: 1;
}

.bundle-type-btn:hover {
  border-color: #28a745;
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(40, 167, 69, 0.15);
}

.bundle-type-btn.active {
  border-color: #28a745;
  background: white;
  color: #222;
  box-shadow: 0 4px 16px rgba(40, 167, 69, 0.15);
}

.bundle-type-btn.active .bundle-type-title,
.bundle-type-btn.active .bundle-type-desc {
  color: #222 !important;
}

.bundle-type-btn .bundle-type-title,
.bundle-type-btn .bundle-type-desc {
  color: #222;
}



.bundle-total-price {
  font-size: 2rem;
  font-weight: 800;
  color: #28a745;
  margin-top: 8px;
}

.bundle-price {
  font-size: 1.4rem;
  font-weight: 600;
  color: #dc3545;
  margin-top: 4px;
}

.bundle-type-btn.active .bundle-price {
  color: #dc3545;
}

.bundle-type-title {
  font-size: 1.2rem;
  font-weight: 700;
  color: #222;
}

.bundle-type-desc {
  font-size: 1.6rem;
  color: #222;
  font-weight: 700;
}

.bundle-type-btn.active .bundle-type-title,
.bundle-type-btn.active .bundle-type-desc {
  color: white;
}

.bundle-badge {
  position: absolute;
  top: -12px;
  left: 50%;
  transform: translateX(-50%);
  padding: 6px 12px;
  border-radius: 16px;
  font-size: 14px;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  z-index: 1;
  white-space: nowrap;
  min-width: fit-content;
}

.bundle-badge.bestseller {
  background: linear-gradient(45deg, #ff6b35, #ff8c42, #ff6b35);
  background-size: 200% 200%;
  animation: shiny-gradient 2s ease-in-out infinite;
  color: white;
}

.bundle-badge.best-value {
  background: linear-gradient(45deg, #28a745, #20c997, #28a745);
  background-size: 200% 200%;
  animation: shiny-gradient 2s ease-in-out infinite;
  color: white;
}

.bundle-savings {
  background: linear-gradient(45deg, #28a745, #20c997, #28a745);
  background-size: 200% 200%;
  animation: shiny-gradient 2s ease-in-out infinite;
  color: white;
  font-size: 1.2rem;
  font-weight: 700;
  padding: 8px 16px;
  border-radius: 16px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  position: absolute;
  bottom: -16px;
  left: 0;
  right: 0;
  transform: none;
  width: 100%;
  text-align: center;
}

@keyframes shiny-gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}



.progress-step.free-step .progress-indicator {
  border-color: #28a745;
}

/* Search and Filter */
.bundler-search-filter {
  padding: 24px 32px;
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  border-bottom: 1px solid #eee;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  border-radius: 16px;
}

.search-container {
  margin-bottom: 16px;
}

.search-container input {
  width: 100%;
  padding: 14px 18px;
  border: 2px solid #e0e0e0;
  border-radius: 12px;
  font-size: 1rem;
  outline: none;
  transition: all 0.3s ease;
  background-color: #f8f9fa;
}

.search-container input:focus {
  border-color: #28a745;
  background-color: white;
  box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
}

.filter-container {
  display: flex;
  gap: 12px;
  justify-content: center;
}

.filter-btn {
  padding: 10px 20px;
  border: 2px solid #e0e0e0;
  border-radius: 16px;
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  color: #666666;
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 600;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.filter-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.filter-btn.active {
  border-color: #28a745;
  background: linear-gradient(135deg, #e8f5e8 0%, #f8fff9 100%);
  color: #28a745;
  box-shadow: 0 4px 12px rgba(40, 167, 69, 0.15);
}

/* Main Content Layout */
.bundler-main-content {
  display: flex;
  gap: 32px;
  min-height: 600px;
  flex: 1;
}

/* Products Grid */
.bundler-products {
  flex: 1;
  padding: 32px;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 24px;
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  border-radius: 16px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

/* Mobile - 2 columns */
@media (max-width: 768px) {
  .bundler-products {
    grid-template-columns: repeat(2, 1fr);
    gap: 16px;
    padding: 20px;
  }
}

@media (max-width: 480px) {
  .bundler-products {
    grid-template-columns: 1fr;
    gap: 16px;
  padding: 16px;
  }
}

.product-card {
  border: 2px solid #e0e0e0;
  border-radius: 16px;
  padding: 20px;
  position: relative;
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  transition: all 0.3s ease;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  overflow: hidden;
  min-height: 450px;
  display: flex;
  flex-direction: column;
}

.product-card:hover {
  border-color: #28a745;
  transform: translateY(-4px);
  box-shadow: 0 8px 25px rgba(40, 167, 69, 0.15);
}

.product-card.selected {
  border-color: #28a745;
  background: linear-gradient(135deg, #e8f5e8 0%, #f8fff9 100%);
  box-shadow: 0 8px 25px rgba(40, 167, 69, 0.2);
  transform: translateY(-4px);
}

/* Product Badge */
.product-badge {
  position: absolute;
  top: 12px;
  left: 12px;
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 0.7rem;
  font-weight: 700;
  text-transform: uppercase;
  z-index: 2;
}

.product-badge.new {
  background-color: #ffd700;
  color: #222;
}

.product-badge.popular {
  background-color: #ff6b6b;
  color: white;
}

/* Product Image */
.product-image {
  text-align: center;
  margin-bottom: 16px;
  position: relative;
}

.product-image img {
  width: 100%;
  height: 250px;
  object-fit: cover;
  border-radius: 8px;
  transition: transform 0.3s ease;
}

.product-card:hover .product-image img {
  transform: scale(1.05);
}

/* Product Info */
.product-info {
  text-align: center;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.product-title {
  margin: 0 0 8px 0;
  font-size: 1.6rem;
  font-weight: 700;
  color: #222;
  line-height: 1.3;
}

/* Product Reviews */
.product-reviews {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  margin-bottom: 12px;
}

.product-reviews .stars {
  color: #ffd700;
  font-size: 0.9rem;
  letter-spacing: 1px;
}

.product-reviews .review-count {
  font-size: 0.8rem;
  color: #666;
  font-weight: 500;
}

/* Price Display */
.product-price-display {
  margin-bottom: 16px;
  text-align: center;
}

.product-price {
  font-size: 1.8rem;
  font-weight: 700;
  color: #28a745;
}

.product-compare-price {
  font-size: 1.2rem;
  font-weight: 500;
  color: #999;
  text-decoration: line-through;
  margin-right: 8px;
}

/* Selected Item Quantity */
.selected-item-quantity {
  display: flex;
  align-items: center;
  border: 1px solid #e0e0e0;
  border-radius: 6px;
  background: white;
  overflow: hidden;
  margin-right: 8px;
}

.selected-item-quantity .quantity-btn {
  width: 24px;
  height: 28px;
  border: none;
  background: #f8f9fa;
  color: #666;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.selected-item-quantity .quantity-btn:hover {
  background: #e9ecef;
  color: #222;
}

.selected-item-quantity .quantity-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.selected-item-quantity .quantity-display {
  width: 32px;
  height: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.9rem;
  font-weight: 700;
  color: #222;
  background: white;
  border-left: 1px solid #e0e0e0;
  border-right: 1px solid #e0e0e0;
}

/* Add to Bundle Button */
.add-to-bundle-btn {
  flex: 1;
  padding: 16px 20px;
  border: 2px solid #e0e0e0;
  border-radius: 16px;
  background: linear-gradient(45deg, #28a745, #20c997, #28a745);
background-size: 200% 200%;
animation: shiny-gradient 2s ease-in-out infinite;
color: white;
  font-size: 1.2rem;
  font-weight: 700;
  cursor: pointer;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.add-to-bundle-btn:hover {
  border-color: #28a745;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(40, 167, 69, 0.15);
}

.add-to-bundle-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
}

.add-to-bundle-btn.selected {
  background: linear-gradient(135deg, #28a745 0%, #20c997 50%, #ffffff 100%);
  background-size: 200% 200%;
  animation: shiny-gradient 2s ease-in-out infinite;
  border-color: #28a745;
}

/* Selection Indicator */
.selection-indicator {
  position: absolute;
  top: 12px;
  right: 12px;
  width: 28px;
  height: 28px;
  border: 2px solid #28a745;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #28a745;
  opacity: 0;
  transition: all 0.3s ease;
}

.product-card.selected .selection-indicator {
  opacity: 1;
}

.check-icon {
  color: white;
  font-size: 14px;
  font-weight: bold;
}

/* Shopping Cart Sidebar */
.bundler-sidebar {
  width: 320px;
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  border-radius: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  position: sticky;
  top: 280px;
  height: fit-content;
  max-height: calc(100vh - 300px);
  z-index: 100;
}

.sidebar-content {
  padding: 24px;
}

.sidebar-title {
  margin: 0 0 20px 0;
  font-size: 1.3rem;
  font-weight: 700;
  color: #222;
  text-align: center;
}

/* Cart Progress */
.cart-progress {
  margin-bottom: 24px;
  padding: 16px;
  background: #f8f9fa;
  border-radius: 12px;
}

.progress-text {
  font-size: 0.9rem;
  color: #666;
  text-align: center;
  margin-bottom: 12px;
  font-weight: 500;
}

.bundler-progress-container {
  position: relative;
  margin-bottom: 8px;
}

.bundler-progress-bar {
  height: 20px;
  background: #e0e0e0;
  border-radius: 10px;
  position: relative;
  overflow: visible;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
}

.bundler-progress-fill {
  height: 100% !important;
  background: #28a745 !important;
  border-radius: 10px;
  transition: width 0.5s ease;
  width: 0%;
  position: relative;
  display: block !important;
  box-sizing: border-box;
  min-height: 20px !important;
  opacity: 1 !important;
  visibility: visible !important;
}

.progress-markers {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  transform: translateY(-50%);
  display: flex;
  justify-content: space-between;
  pointer-events: none;
  z-index: 10;
  padding: 0 12px;
}

.marker {
  width: 28px;
  height: 28px;
  border-radius: 50%;
  background: white;
  border: 3px solid #e0e0e0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.9rem;
  font-weight: 700;
  color: #666;
  transition: all 0.3s ease;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  pointer-events: auto;
  z-index: 11;
}

.buy-marker {
  border-color: #ddd;
}

.free-marker {
  border-color: #28a745;
  background: #e8f5e8;
  color: #28a745;
}

.marker.active {
  background: #28a745;
  border-color: #28a745;
  color: white;
  transform: scale(1.1);
  box-shadow: 0 4px 8px rgba(40, 167, 69, 0.3);
}

/* Selected Items */
.selected-items {
  margin-bottom: 24px;
}

.empty-cart {
  text-align: center;
  padding: 40px 20px;
  color: #666;
}

.empty-cart p {
  margin: 0;
  font-size: 0.9rem;
}

.selected-item {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 12px;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  margin-bottom: 8px;
  background: white;
  transition: all 0.3s ease;
  position: relative;
}

.selected-item:hover {
  border-color: #28a745;
  box-shadow: 0 2px 8px rgba(40, 167, 69, 0.1);
}

.selected-item-image {
  width: 40px;
  height: 40px;
  border-radius: 6px;
  object-fit: cover;
  flex-shrink: 0;
}

.selected-item-info {
  flex: 1;
  min-width: 0;
}

.selected-item-title {
  font-size: 0.9rem;
  font-weight: 600;
  color: #222;
  margin: 0 0 4px 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.selected-item-variant {
  font-size: 0.8rem;
  color: #666;
  margin: 0;
}

.selected-item-remove {
  background: none;
  border: none;
  color: #ff6b6b;
  cursor: pointer;
  font-size: 1.2rem;
  padding: 4px;
  border-radius: 4px;
  transition: all 0.3s ease;
}

.selected-item-remove:hover {
  background: #ff6b6b;
  color: white;
}

/* Selected Item Actions */
.selected-item-actions {
  display: flex;
  align-items: center;
  gap: 8px;
}

/* Free Badge */
.free-badge {
  background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
  color: white;
  font-size: 0.7rem;
  font-weight: 700;
  padding: 6px 4px;
  border-radius: 8px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  writing-mode: vertical-rl;
  text-orientation: mixed;
  transform: rotate(180deg);
  position: absolute;
  right: -8px;
  top: 50%;
  transform: translateY(-50%) rotate(180deg);
  z-index: 10;
}

.free-item {
  border-color: #28a745 !important;
  background: linear-gradient(135deg, #f8fff9 0%, #ffffff 100%) !important;
}

/* Sidebar Footer */
.sidebar-footer {
  border-top: 1px solid #e0e0e0;
  padding-top: 20px;
}

.add-bundle-btn {
  width: 100%;
  padding: 16px;
  border: none;
  border-radius: 12px;
  background: linear-gradient(135deg, #28a745 0%, #20c997 50%, #ffffff 100%);
  background-size: 200% 200%;
  animation: shiny-gradient 2s ease-in-out infinite;
  color: white;
  font-size: 1rem;
  font-weight: 700;
  cursor: pointer;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.btn-text {
  flex: 1;
  text-align: left;
}

.btn-status {
  background: rgba(255, 255, 255, 0.2);
  padding: 4px 8px;
  border-radius: 6px;
  font-size: 0.9rem;
  font-weight: 600;
}

.add-bundle-btn:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(40, 167, 69, 0.3);
}

.add-bundle-btn:disabled {
  background: #e0e0e0;
  color: #666;
  cursor: not-allowed;
  transform: none;
}

.product-price {
  font-size: 1.1rem;
  font-weight: 700;
  color: #222;
  margin-bottom: 12px;
}

.product-variant {
  margin-bottom: 12px;
}

.product-variant label {
  display: block;
  font-size: 0.8rem;
  color: #666;
  margin-bottom: 4px;
}

.variant-select {
  width: 100%;
  padding: 6px 8px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 0.9rem;
  background: white;
}

.quantity-selector {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  width: 100%;
  padding: 8px;
  border: 2px solid #e0e0e0;
  border-radius: 16px;
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  background-size: 200% 200%;
  animation: shiny-gradient 2s ease-in-out infinite;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.quantity-selector .quantity-btn {
  width: 32px;
  height: 32px;
  border: 2px solid #e0e0e0;
  background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
  background-size: 200% 200%;
  animation: shiny-gradient 2s ease-in-out infinite;
  color: #222;
  font-size: 1.2rem;
  font-weight: 700;
  cursor: pointer;
  border-radius: 8px;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.quantity-selector .quantity-btn:hover {
  border-color: #28a745;
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(40, 167, 69, 0.15);
}

.quantity-selector .quantity-display {
  min-width: 40px;
  text-align: center;
  font-size: 1.1rem;
  font-weight: 700;
  color: #222;
}

.category-tag {
  display: inline-block;
  padding: 2px 8px;
  border-radius: 12px;
  font-size: 0.7rem;
  font-weight: 600;
  text-transform: uppercase;
}

.category-tag.man {
  background-color: #e3f2fd;
  color: #1976d2;
}

.category-tag.woman {
  background-color: #fce4ec;
  color: #c2185b;
}







/* Responsive */
@media (max-width: 1024px) {
  .bundler-main-content {
    flex-direction: column;
    gap: 24px;
  }
  
  .bundler-sidebar {
    width: 100%;
    position: static;
    max-height: none;
  }
}

@media (max-width: 768px) {
  .bundler-header {
    padding: 24px 20px;
  }
  
  .bundler-title h1 {
    font-size: 2rem;
  }
  
  .bundle-type-buttons {
    flex-direction: column;
    align-items: center;
  }
  
  .bundle-type-btn {
    min-width: 200px;
  }
  
  .bundler-search-filter {
    padding: 20px;
  }
  
  .filter-container {
    flex-wrap: wrap;
  }
  
  .bundler-products {
    padding: 20px;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }
  
  .product-card {
    min-height: 400px;
  }
  
  .product-image img {
    height: 200px;
  }
}
</style>

<script>
// Global variables
let selectedProducts = [];
let currentFilter = 'all';
let currentSearch = '';
let currentBundleType = '2+1'; // Default bundle type
let productQuantities = {}; // Store quantities for each product
let currentVariant = '100ML'; // Default variant
let variantPrices = {
  '30ML': 1399, // $13.99 in cents
  '50ML': 1999, // $19.99 in cents
  '100ML': 2699  // $26.99 in cents
};
let bundleConfig = {
  '2+1': { buy: 2, free: 1, total: 3 },
  '3+2': { buy: 3, free: 2, total: 5 },
  '4+3': { buy: 4, free: 3, total: 7 },
  '5+4': { buy: 5, free: 4, total: 9 }
};



// Bundle type selection
function selectBundleType(bundleType) {
  console.log('Bundle type changed to:', bundleType);
  
  currentBundleType = bundleType;
  selectedProducts = []; // Reset selections when changing bundle type
  productQuantities = {}; // Reset quantities
  
  // Update button states
  document.querySelectorAll('.bundle-type-btn').forEach(btn => {
    btn.classList.remove('active');
  });
  event.target.closest('.bundle-type-btn').classList.add('active');
  
  // Update progress text
  updateProgressText();
  
  // Generate progress markers
  generateProgressMarkers();
  
  // Update cart progress
  updateCartProgress();
  updateProgressBarFill();
  
  // Update selected items
  updateSelectedItems();
  
  // Update add button
  updateAddButton();
  
  // Reset product selections
  document.querySelectorAll('.product-card').forEach(card => {
    card.classList.remove('selected');
    const button = card.querySelector('.add-to-bundle-btn');
    if (button) {
      button.textContent = 'ADD TO BUNDLE';
      button.classList.remove('selected');
    }
    const indicator = card.querySelector('.selection-indicator');
    if (indicator) {
      indicator.style.display = 'none';
    }
  });
  
  // Update bundle prices
  updateBundlePrices();
  
  // Scroll to product grid and search with offset
  const productGrid = document.querySelector('.bundler-products');
  if (productGrid) {
    const offset = productGrid.offsetTop - 200;
    window.scrollTo({ top: offset, behavior: 'smooth' });
  }
  
  console.log('Bundle type selection completed');
}





// Get ordinal suffix (1st, 2nd, 3rd, etc.)
function getOrdinalSuffix(num) {
  if (num >= 11 && num <= 13) return 'th';
  switch (num % 10) {
    case 1: return 'st';
    case 2: return 'nd';
    case 3: return 'rd';
    default: return 'th';
  }
}

// Update progress text and sidebar title
function updateProgressText() {
  const cartProgressText = document.getElementById('cartProgressText');
  const sidebarTitle = document.getElementById('sidebarTitle');
  const config = bundleConfig[currentBundleType];
  
  let text = '';
  let title = '';
  
  if (selectedProducts.length === 0) {
    text = `Please select at least ${config.total} scents`;
    title = `Please Select At Least ${config.total} Scents`;
  } else if (selectedProducts.length < config.total) {
    text = `Please select ${config.total - selectedProducts.length} more scents`;
    title = `Please Select ${config.total - selectedProducts.length} More Scents`;
  } else {
    text = 'Perfect! Your bundle is ready';
    title = 'Your Bundle Is Ready!';
  }
  
  if (cartProgressText) cartProgressText.textContent = text;
  if (sidebarTitle) sidebarTitle.textContent = title;
}

// Generate progress markers
function generateProgressMarkers() {
  const markersContainer = document.getElementById('progressMarkers');
  const config = bundleConfig[currentBundleType];
  
  if (markersContainer) {
    let markersHTML = '';
    
    // Add buy markers
    for (let i = 1; i <= config.buy; i++) {
      markersHTML += `<span class="marker buy-marker" data-value="${i}">${i}</span>`;
    }
    
    // Add free markers
    for (let i = config.buy + 1; i <= config.total; i++) {
      markersHTML += `<span class="marker free-marker" data-value="${i}">${i}</span>`;
    }
    
    markersContainer.innerHTML = markersHTML;
  }
}

    // Update cart progress bar
    function updateCartProgress() {
      const progressFill = document.getElementById('cartProgressFill');
      const config = bundleConfig[currentBundleType];
      
      console.log('=== PROGRESS DEBUG ===');
      console.log('progressFill element:', progressFill);
      console.log('progressFill width before:', progressFill ? progressFill.style.width : 'N/A');
      
      // Calculate total items including quantities
      let totalItems = 0;
      selectedProducts.forEach(product => {
        const quantity = productQuantities[product.id] || 1;
        totalItems += quantity;
      });
      
      if (progressFill) {
        // Calculate progress from 0 to total (not from buy to total)
        const progressPercent = (totalItems / config.total) * 100;
        console.log('Setting width to:', progressPercent + '%');
        progressFill.style.width = progressPercent + '%';
        console.log('progressFill width after:', progressFill.style.width);
      }
      
      // Update markers
      document.querySelectorAll('.marker').forEach(marker => {
        const value = parseInt(marker.dataset.value);
        if (totalItems >= value) {
          marker.classList.add('active');
        } else {
          marker.classList.remove('active');
        }
      });
    }

    // Update progress bar fill separately
    function updateProgressBarFill() {
      const progressFill = document.getElementById('cartProgressFill');
      const config = bundleConfig[currentBundleType];
      
      console.log('=== BUNDLER PROGRESS BAR FILL DEBUG ===');
      console.log('progressFill element:', progressFill);
      console.log('progressFill classList:', progressFill ? progressFill.classList : 'N/A');
      console.log('progressFill HTML:', progressFill ? progressFill.outerHTML : 'N/A');
      
      // Calculate total items including quantities
      let totalItems = 0;
      selectedProducts.forEach(product => {
        const quantity = productQuantities[product.id] || 1;
        totalItems += quantity;
      });
      
      console.log('totalItems:', totalItems);
      console.log('config.total:', config.total);
      
      if (progressFill) {
        const progressPercent = (totalItems / config.total) * 100;
        console.log('Calculated progressPercent:', progressPercent);
        progressFill.style.width = progressPercent + '%';
        progressFill.style.backgroundColor = '#28a745';
        progressFill.style.display = 'block';
        progressFill.style.height = '100%';
        progressFill.style.minHeight = '20px';
        progressFill.style.opacity = '1';
        progressFill.style.visibility = 'visible';
        console.log('Set width to:', progressPercent + '%');
        console.log('Set background to green');
        console.log('Actual width after setting:', progressFill.style.width);
        console.log('Actual background after setting:', progressFill.style.backgroundColor);
        console.log('Computed width:', window.getComputedStyle(progressFill).width);
        console.log('Computed height:', window.getComputedStyle(progressFill).height);
        console.log('Computed background:', window.getComputedStyle(progressFill).background);
        console.log('Computed display:', window.getComputedStyle(progressFill).display);
        console.log('Computed opacity:', window.getComputedStyle(progressFill).opacity);
        console.log('Computed visibility:', window.getComputedStyle(progressFill).visibility);
      } else {
        console.error('BUNDLER PROGRESS FILL ELEMENT NOT FOUND!');
      }
    }

// Update selected items in sidebar
function updateSelectedItems() {
  const selectedItemsContainer = document.getElementById('selectedItems');
  const config = bundleConfig[currentBundleType];
  
  if (selectedProducts.length === 0) {
    selectedItemsContainer.innerHTML = `
      <div class="empty-cart">
        <p>Your cart is empty.</p>
      </div>
    `;
    return;
  }
  
  let itemsHTML = '';
  selectedProducts.forEach((product, index) => {
    const isFree = index >= config.buy;
    const freeBadge = isFree ? '<span class="free-badge">FREE</span>' : '';
    
    const quantity = productQuantities[product.id] || 1;
    itemsHTML += `
      <div class="selected-item ${isFree ? 'free-item' : ''}" data-product-id="${product.id}">
        <img src="${product.image || ''}" alt="${product.title}" class="selected-item-image">
        <div class="selected-item-info">
          <h4 class="selected-item-title">${product.title}</h4>
          <p class="selected-item-variant">${product.variant || '100ML'}</p>
        </div>
        <div class="selected-item-quantity">
          <button class="quantity-btn minus" onclick="changeQuantity(${product.id}, -1)">-</button>
          <span class="quantity-display">${quantity}</span>
          <button class="quantity-btn plus" onclick="changeQuantity(${product.id}, 1)">+</button>
        </div>
        <div class="selected-item-actions">
          ${freeBadge}
          <button class="selected-item-remove" onclick="removeFromCart(${product.id})">×</button>
        </div>
      </div>
    `;
  });
  
  selectedItemsContainer.innerHTML = itemsHTML;
  
  // Update add button after updating selected items
  updateAddButton();
}

// Remove item from cart
function removeFromCart(productId) {
  const productCard = document.querySelector(`[data-product-id="${productId}"]`);
  if (productCard) {
    selectProduct(productId, productCard.dataset.variantId);
  }
}

// Initialize bundler
document.addEventListener('DOMContentLoaded', function() {
  console.log('Bundle page script loaded!');
  console.log('Products grid found:', document.getElementById('productsGrid'));
  console.log('Product cards found:', document.querySelectorAll('.product-card').length);
  
  // Check if functions are defined
  console.log('selectProduct function exists:', typeof selectProduct);
  console.log('applyFilters function exists:', typeof applyFilters);
  
  updateProgressText();
  generateProgressMarkers();
  updateCartProgress();
  updateProgressBarFill();
  updateSelectedItems();
  
  // Clean HTML from data attributes on load
  cleanDataAttributes();
  
  console.log('Bundle builder initialized');
  
  // updateProgress will be called after function is defined
  if (typeof applyFilters === 'function') {
    applyFilters(); // Apply initial filters
  } else {
    console.error('applyFilters function not found!');
  }
  
  // Set up scroll listener for search bar animation
  setupSearchBarAnimation();
});

// Search bar animation function
function setupSearchBarAnimation() {
  const searchBar = document.querySelector('.bundler-search-filter');
  const sidebar = document.querySelector('.bundler-sidebar');
  const bundlerContainer = document.querySelector('.bundler-container');
  
  if (!searchBar || !sidebar || !bundlerContainer) return;
  
  const sidebarWidth = 320; // Width of sidebar
  const containerPadding = 40; // Total padding of container (20px on each side)
  const containerWidth = bundlerContainer.offsetWidth;
  
  window.addEventListener('scroll', function() {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    const searchBarRect = searchBar.getBoundingClientRect();
    const sidebarRect = sidebar.getBoundingClientRect();
    
    // Check if search bar should start moving (when it hits the top)
    if (searchBarRect.top <= 200) {
      // Calculate how much to move based on scroll position
      const scrollProgress = Math.min((200 - searchBarRect.top) / 100, 1);
const const translateX = scrollProgress * (containerWidth - sidebarWidth - 40);
const newWidth = sidebarWidth - 40;// Small width over sidebar
      
      searchBar.style.transform = `translateX(${translateX}px)`;
      searchBar.style.width = `${newWidth}px`;
      searchBar.style.zIndex = '100';
      searchBar.style.borderRadius = '16px';
    } else {
      searchBar.style.transform = 'translateX(0)';
      searchBar.style.width = '100%';
      searchBar.style.zIndex = '50';
      searchBar.style.borderRadius = '16px';
    }
  });
}